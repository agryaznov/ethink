{"abi":[{"type":"constructor","inputs":[{"name":"initvalue","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"flip","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"get","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b50604051610115380380610115833981016040819052602c916041565b6000805460ff19169115159190911790556068565b600060208284031215605257600080fd5b81518015158114606157600080fd5b9392505050565b609f806100766000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80636d4ce63c146037578063cde4efa9146051575b600080fd5b60005460ff16604051901515815260200160405180910390f35b60676000805460ff19811660ff90911615179055565b00fea26469706673582212200f3c27bf22847dd66a43d4f78d56ff5970e6650f45e36fa821ec82bd2efbca8764736f6c634300081a0033","sourceMap":"66:623:0:-:0;;;207:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;253:5;:17;;-1:-1:-1;;253:17:0;;;;;;;;;;66:623;;14:277:1;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:1:o;:::-;66:623:0;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052348015600f57600080fd5b506004361060325760003560e01c80636d4ce63c146037578063cde4efa9146051575b600080fd5b60005460ff16604051901515815260200160405180910390f35b60676000805460ff19811660ff90911615179055565b00fea26469706673582212200f3c27bf22847dd66a43d4f78d56ff5970e6650f45e36fa821ec82bd2efbca8764736f6c634300081a0033","sourceMap":"66:623:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:83;640:4;671:5;;;604:83;;179:14:1;;172:22;154:41;;142:2;127:18;604:83:0;;;;;;;468:66;;518:5;;;-1:-1:-1;;509:14:0;;518:5;;;;517:6;509:14;;;468:66;;","linkReferences":{}},"methodIdentifiers":{"flip()":"cde4efa9","get()":"6d4ce63c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"initvalue\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"flip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor that initializes the `bool` value to the given `init_value`.\"},\"flip()\":{\"notice\":\"A message that can be called on instantiated contracts. This one flips the value of the stored `bool` from `true` to `false` and vice versa.\"},\"get()\":{\"notice\":\"Simply returns the current value of our `bool`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Flipper.sol\":\"Flipper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Flipper.sol\":{\"keccak256\":\"0xcfa056c3209eca55d607d3e5648ad9ea1a5e4cc36846d6025f881c08d57f0e88\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73b97bbf924334314f3714ba88c62ab220342fd99c291383729138a11e586c36\",\"dweb:/ipfs/QmVrTNDuP8pHj7SoFKGSGpPkvjvyDiDMdPVnXmAuG3d2Wf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bool","name":"initvalue","type":"bool"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"flip"},{"inputs":[],"stateMutability":"view","type":"function","name":"get","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructor that initializes the `bool` value to the given `init_value`."},"flip()":{"notice":"A message that can be called on instantiated contracts. This one flips the value of the stored `bool` from `true` to `false` and vice versa."},"get()":{"notice":"Simply returns the current value of our `bool`."}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/Flipper.sol":"Flipper"},"evmVersion":"paris","libraries":{}},"sources":{"src/Flipper.sol":{"keccak256":"0xcfa056c3209eca55d607d3e5648ad9ea1a5e4cc36846d6025f881c08d57f0e88","urls":["bzz-raw://73b97bbf924334314f3714ba88c62ab220342fd99c291383729138a11e586c36","dweb:/ipfs/QmVrTNDuP8pHj7SoFKGSGpPkvjvyDiDMdPVnXmAuG3d2Wf"],"license":"UNLICENSED"}},"version":1},"id":0}